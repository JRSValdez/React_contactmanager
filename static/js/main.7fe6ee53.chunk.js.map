{"version":3,"sources":["Context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layout/Header.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","components/contacts/EditContact.js","components/pages/About.js","components/pages/NotFound.js","components/test/Test.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","Object","objectSpread","contacts","filter","contact","id","payload","concat","toConsumableArray","map","Provider","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","dispatch","setState","inherits","createClass","key","value","_componentDidMount","asyncToGenerator","regenerator_default","a","mark","_callee","res","wrap","_context","prev","next","axios","get","sent","data","stop","react_default","createElement","props","children","Component","Consumer","Contact","showContactInfo","onShowContact","e","onDeleteContact","delete","t0","_this2","_this$props$contact","name","email","phone","className","onClick","style","cursor","NavLink","exact","to","color","bind","Contacts","Fragment","contacts_Contact","Header","branding","href","defaultProps","TextInputGroup","_ref","label","placeHolder","onChange","error","htmlFor","classnames","is-invalid","placeholder","AddContact","errors","defineProperty","target","onSubmit","_this$state","newContact","preventDefault","abrupt","post","history","push","_this$state2","layout_TextInputGroup","EditContact","updContact","match","params","put","About","NotFound","Test","title","body","console","log","fetch","then","response","json","App","Context_Provider","HashRouter","layout_Header","Switch","Route","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7fe6ee53.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst Context = React.createContext();\r\n\r\nconst reducer = (state, action) => {\r\n    switch (action.type) {\r\n        case 'DELETE_CONTACT':\r\n            return {\r\n                ...state,\r\n                contacts: state.contacts.filter(contact =>\r\n                    contact.id !== action.payload)\r\n            };\r\n        case 'ADD_CONTACT':\r\n            return {\r\n                ...state,\r\n                contacts: [action.payload, ...state.contacts]\r\n            };\r\n        case 'UPDATE_CONTACT':\r\n            return {\r\n                ...state,\r\n                contacts: state.contacts.map(contact =>\r\n                    contact.id === action.payload.id\r\n                        ? (contact = action.payload) : contact)\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport class Provider extends Component {\r\n    state = {\r\n        contacts: [],\r\n        dispatch: action => this.setState(state => reducer(state, action))\r\n    };\r\n\r\n    async componentDidMount() {\r\n        const res = await axios.get('https://jsonplaceholder.typicode.com/users');\r\n\r\n        this.setState({ contacts: res.data });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Context.Provider value={this.state}>\r\n                {this.props.children}\r\n            </Context.Provider>\r\n        )\r\n    }\r\n}\r\n\r\nexport const Consumer = Context.Consumer;","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Consumer } from '../../Context';\r\nimport { NavLink } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nclass Contact extends Component {\r\n    state = {\r\n        showContactInfo: false\r\n    };\r\n    onShowContact = e => {\r\n        this.setState({ showContactInfo: !this.state.showContactInfo });\r\n    };\r\n    onDeleteContact = async (id, dispatch) => {\r\n        try {\r\n            await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n            dispatch({ type: 'DELETE_CONTACT', payload: id });\r\n        } catch (e) {\r\n            dispatch({ type: 'DELETE_CONTACT', payload: id });\r\n        }\r\n\r\n    };\r\n    render() {\r\n        //to avoid putting this.props.\r\n        const { id, name, email, phone } = this.props.contact;\r\n        const { showContactInfo } = this.state;\r\n\r\n        return (\r\n            <Consumer>\r\n                {value => {\r\n                    const { dispatch } = value;\r\n                    return (\r\n                        <div className=\"card card-body mb-3\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col-10\">\r\n                                    <h4 onClick={this.onShowContact}\r\n                                        style={{ cursor: 'pointer' }}>\r\n                                        {name}\r\n                                        <i className=\"fas fa-sort-down\" />\r\n                                    </h4>\r\n                                </div>\r\n                                <div className=\"col-1 mr-auto\">\r\n                                    <NavLink exact to={`contact/edit/${id}`}>\r\n                                        <i className=\"fas fa-pencil-alt\"\r\n                                            style={{ cursor: 'pointer', color: 'black' }}\r\n                                        />\r\n                                    </NavLink>\r\n                                </div>\r\n                                <div className=\"col-1 mr-auto\"\r\n                                    onClick={this.onDeleteContact.bind(this, id, dispatch)}>\r\n                                    <i className=\"fas fa-times\"\r\n                                        style={{ cursor: 'pointer', color: 'red' }} />\r\n                                </div>\r\n                            </div>\r\n                            {showContactInfo ? (\r\n                                <ul className=\"list-group\">\r\n                                    <li className=\"list-group-item\">Email: {email}</li>\r\n                                    <li className=\"list-group-item\">Phone: {phone}</li>\r\n                                </ul>\r\n                            ) : null}\r\n\r\n                        </div >\r\n                    )\r\n                }}\r\n            </Consumer>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nContact.propTypes = {\r\n    contact: PropTypes.object.isRequired\r\n}\r\n\r\nexport default Contact;","import React, { Component } from 'react';\r\nimport Contact from './Contact';\r\nimport { Consumer } from '../../Context';\r\n\r\nclass Contacts extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <Consumer>\r\n                {value => {\r\n                    const { contacts } = value;\r\n                    return (\r\n                        <React.Fragment>\r\n\r\n                            <h1 className=\"display-4 mb-2\">\r\n                                <span className=\"text-danger\">Contact</span> List\r\n                            </h1>\r\n\r\n                            {contacts.map(contact => (\r\n                                <Contact\r\n                                    key={contact.id}\r\n                                    contact={contact}\r\n                                />\r\n                            ))}\r\n                        </React.Fragment>\r\n                    )\r\n                }}\r\n            </Consumer>\r\n        )\r\n    }\r\n}\r\nexport default Contacts;\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nconst Header = (props) => {\r\n    //to avoid putting props.\r\n    const { branding } = props;\r\n    return (\r\n        <nav className=\"navbar navbar-expam-sm navbar-dark bg-danger mb-3 py-0\">\r\n            <div className=\"container\">\r\n                <a href=\"/\" className=\"navbar-brand\">\r\n                    {branding}\r\n                </a>\r\n                <div>\r\n                    <ul className=\"navbar-nav mr-auto\">\r\n                        <li className=\"nav-item\">\r\n                            <NavLink exact to=\"/\" className=\"nav-link\">\r\n                                <i className=\"fa fa-home\"></i> Home\r\n                        </NavLink>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <NavLink exact to=\"/contact/add\" className=\"nav-link\">\r\n                                <i className=\"fa fa-plus\"></i>Add\r\n                        </NavLink>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <NavLink exact to=\"/about\" className=\"nav-link\">\r\n                                <i className=\"fa fa-question\"></i>About\r\n                        </NavLink>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    );\r\n}\r\n\r\nHeader.defaultProps = {\r\n    branding: \"My App by JRSV\"\r\n}\r\n\r\nHeader.propTypes = {\r\n    branding: PropTypes.string.isRequired\r\n}\r\n\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classnames from 'classnames';\r\n\r\n\r\nconst TextInputGroup = ({\r\n    label, name, value, placeHolder, type, onChange, error\r\n}) => {\r\n    return (\r\n        <div className='form-group'>\r\n            <label htmlFor={name}>{label}</label>\r\n            <input\r\n                type={type}\r\n                name={name}\r\n                className={classnames('form-control form-control-lg', { 'is-invalid': error })}\r\n                placeholder={placeHolder}\r\n                value={value}\r\n                onChange={onChange}\r\n            />\r\n            {error && <div className=\"invalid-feedback\">\r\n                {error}\r\n            </div>}\r\n        </div>\r\n    )\r\n}\r\n\r\nTextInputGroup.propTypes = {\r\n    name: PropTypes.string.isRequired,\r\n    placeHolder: PropTypes.string.isRequired,\r\n    value: PropTypes.string.isRequired,\r\n    label: PropTypes.string.isRequired,\r\n    type: PropTypes.string.isRequired,\r\n    onChange: PropTypes.func.isRequired,\r\n    error: PropTypes.string\r\n}\r\n\r\nTextInputGroup.defaultProps = {\r\n    type: 'text'\r\n}\r\n\r\nexport default TextInputGroup;","import React, { Component } from 'react';\r\nimport { Consumer } from '../../Context';\r\nimport TextInputGroup from '../layout/TextInputGroup';\r\n//import uuid from 'uuid';\r\nimport axios from 'axios';\r\n\r\nclass AddContact extends Component {\r\n\r\n    state = {\r\n        name: '',\r\n        email: '',\r\n        phone: '',\r\n        errors: {}\r\n    };\r\n\r\n    onChange = (e) => this.setState({ [e.target.name]: e.target.value });\r\n\r\n    onSubmit = async (dispatch, e) => {\r\n        e.preventDefault();\r\n\r\n        const { name, email, phone } = this.state;\r\n\r\n        //Validation\r\n        if (name === '') {\r\n            this.setState({ errors: { name: 'Name is required' } });\r\n            return;\r\n        }\r\n        if (email === '') {\r\n            this.setState({ errors: { email: 'Emal is required' } });\r\n            return;\r\n        }\r\n        if (phone === '') {\r\n            this.setState({ errors: { phone: 'Phone is required' } });\r\n            return;\r\n        }\r\n\r\n        const newContact = {\r\n            //id: uuid(),\r\n            name,\r\n            email,\r\n            phone\r\n        };\r\n\r\n        const res = await axios.post('https://jsonplaceholder.typicode.com/users', newContact);\r\n        dispatch({ type: 'ADD_CONTACT', payload: res.data })\r\n\r\n        //cleaning txt\r\n        this.setState({\r\n            name: '',\r\n            email: '',\r\n            phone: '',\r\n            errors: {}\r\n        });\r\n\r\n        this.props.history.push('/');\r\n    }\r\n\r\n    render() {\r\n        const { name, email, phone, errors } = this.state;\r\n\r\n        return (\r\n            <Consumer>\r\n                {value => {\r\n                    const { dispatch } = value;\r\n                    return (\r\n                        <div className='card mb-3'>\r\n                            <div className='card-header'>\r\n                                Add Contact\r\n                            </div>\r\n                            <div className='card-body'>\r\n                                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                                    <TextInputGroup\r\n                                        label='Name'\r\n                                        name='name'\r\n                                        placeHolder='Enter Name...'\r\n                                        value={name}\r\n                                        onChange={this.onChange}\r\n                                        error={errors.name}\r\n                                    />\r\n                                    <TextInputGroup\r\n                                        label='Email'\r\n                                        name='email'\r\n                                        placeHolder='Enter email...'\r\n                                        type='email'\r\n                                        value={email}\r\n                                        onChange={this.onChange}\r\n                                        error={errors.email}\r\n                                    />\r\n                                    <TextInputGroup\r\n                                        label='Phone'\r\n                                        name='phone'\r\n                                        placeHolder='Enter phone...'\r\n                                        value={phone}\r\n                                        onChange={this.onChange}\r\n                                        error={errors.phone}\r\n                                    />\r\n                                    <input\r\n                                        type='submit'\r\n                                        value='Add Contact'\r\n                                        className='btn btn-light btn-block' />\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                }}\r\n            </Consumer>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AddContact;\r\n","import React, { Component } from 'react';\r\nimport { Consumer } from '../../Context';\r\nimport TextInputGroup from '../layout/TextInputGroup';\r\n//import uuid from 'uuid';\r\nimport axios from 'axios';\r\n\r\nclass EditContact extends Component {\r\n\r\n    state = {\r\n        name: '',\r\n        email: '',\r\n        phone: '',\r\n        errors: {}\r\n    };\r\n\r\n    async componentDidMount() {\r\n        const { id } = this.props.match.params;\r\n        const res = await axios.get(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n\r\n        const contact = res.data;\r\n\r\n        this.setState({\r\n            name: contact.name,\r\n            email: contact.email,\r\n            phone: contact.phone\r\n        });\r\n    }\r\n\r\n    onChange = (e) => this.setState({ [e.target.name]: e.target.value });\r\n\r\n    onSubmit = async (dispatch, e) => {\r\n        e.preventDefault();\r\n\r\n        const { name, email, phone } = this.state;\r\n\r\n        //Validation\r\n        if (name === '') {\r\n            this.setState({ errors: { name: 'Name is required' } });\r\n            return;\r\n        }\r\n        if (email === '') {\r\n            this.setState({ errors: { email: 'Emal is required' } });\r\n            return;\r\n        }\r\n        if (phone === '') {\r\n            this.setState({ errors: { phone: 'Phone is required' } });\r\n            return;\r\n        }\r\n\r\n        const updContact = {\r\n            //id: uuid(),\r\n            name,\r\n            email,\r\n            phone\r\n        };\r\n        const { id } = this.props.match.params;\r\n\r\n        const res = await axios.put(`https://jsonplaceholder.typicode.com/users/${id}`, updContact);\r\n\r\n        dispatch({ type: 'UPDATE_CONTACT', payload: res.data })\r\n\r\n        //cleaning txt\r\n        this.setState({\r\n            name: '',\r\n            email: '',\r\n            phone: '',\r\n            errors: {}\r\n        });\r\n\r\n        this.props.history.push('/');\r\n    }\r\n\r\n    render() {\r\n        const { name, email, phone, errors } = this.state;\r\n\r\n        return (\r\n            <Consumer>\r\n                {value => {\r\n                    const { dispatch } = value;\r\n                    return (\r\n                        <div className='card mb-3'>\r\n                            <div className='card-header'>\r\n                                Edit Contact\r\n                            </div>\r\n                            <div className='card-body'>\r\n                                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                                    <TextInputGroup\r\n                                        label='Name'\r\n                                        name='name'\r\n                                        placeHolder='Enter Name...'\r\n                                        value={name}\r\n                                        onChange={this.onChange}\r\n                                        error={errors.name}\r\n                                    />\r\n                                    <TextInputGroup\r\n                                        label='Email'\r\n                                        name='email'\r\n                                        placeHolder='Enter email...'\r\n                                        type='email'\r\n                                        value={email}\r\n                                        onChange={this.onChange}\r\n                                        error={errors.email}\r\n                                    />\r\n                                    <TextInputGroup\r\n                                        label='Phone'\r\n                                        name='phone'\r\n                                        placeHolder='Enter phone...'\r\n                                        value={phone}\r\n                                        onChange={this.onChange}\r\n                                        error={errors.phone}\r\n                                    />\r\n                                    <input\r\n                                        type='submit'\r\n                                        value='Update Contact'\r\n                                        className='btn btn-light btn-block' />\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                }}\r\n            </Consumer>\r\n        )\r\n    }\r\n}\r\n\r\nexport default EditContact;\r\n","import React from 'react'\r\nexport default () => {\r\n    return (\r\n        <div>\r\n            <h1 className=\"display-4\">About Contact</h1>\r\n            <p className=\"lead\">Simple aa to manage contacts</p>\r\n            <p className=\"text-secondary\">Version 1.0.0</p>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\n\r\nexport default function NotFound() {\r\n    return (\r\n        <div>\r\n            <h1 className=\"display-4\">\r\n                <span className=\"text-danger\">404</span> page not found\r\n            </h1>\r\n            <p className=\"lead\">Sorry that does not exist</p>\r\n        </div>\r\n    )\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nclass Test extends Component {\r\n\r\n    state = {\r\n        title: '',\r\n        body: ''\r\n    }\r\n\r\n    componentDidMount() { //se inicializa el componente\r\n        console.log('componentDidMount');\r\n        fetch('https://jsonplaceholder.typicode.com/posts/1')\r\n            .then(response => response.json())\r\n            .then(data => this.setState({\r\n                title: data.title,\r\n                body: data.body\r\n            }))\r\n    }\r\n\r\n    // //(deprecated)\r\n    // componentWillMount() { //se inicializa antes de DidMount\r\n    //     console.log('componentWillMount');\r\n    // }\r\n\r\n    // //(deprecated)\r\n    // componentWillUpdate() { //antes de actualizar el estado\r\n    //     console.log('componentWillUpdate');\r\n    // }\r\n\r\n    // componentDidUpdate() { //al cambiar el estado del componente\r\n    //     console.log('componentDidUpdate');\r\n    // }\r\n    // //(deprecated)\r\n    // componentWillReceiveProps(nextProps, nextState) {\r\n    //     console.log('componentWillReceiveProps');\r\n    // }\r\n\r\n    // static getDerivedStateFromProps(nextProps, prevState) {\r\n    //     return {\r\n    //         test: 'something'\r\n    //     };\r\n    // }\r\n\r\n    // getSnapshotBeforeUpdate(prevProps, prevState) {\r\n    //     console.log('getSnapshotBeforeUpdate');\r\n    // }\r\n\r\n    render() {\r\n        const { title, body } = this.state;\r\n        return (\r\n            <div>\r\n                <h1>{title}</h1>\r\n                <p>{body}</p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Test;","import React, { Component } from 'react';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport Contacts from './components/contacts/Contacts';\nimport Header from './components/layout/Header';\nimport AddContact from './components/contacts/AddContact';\nimport EditContact from './components/contacts/EditContact';\nimport About from './components/pages/About';\nimport NotFound from './components/pages/NotFound';\nimport Test from './components/test/Test';\nimport { Provider } from './Context';\n\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider>\n        <Router>\n          <div className=\"App\">\n            <Header branding=\"Contact Manager by JRSV\" />\n\n            <div className=\"container\">\n              <Switch>\n                {/* index */}\n                <Route exact path=\"/\" component={Contacts} />\n                {/* add a new contact */}\n                <Route exact path=\"/contact/add\" component={AddContact} />\n                {/* edit contact */}\n                <Route exact path=\"/contact/edit/:id\" component={EditContact} />\n                {/* about */}\n                <Route exact path=\"/about\" component={About} />\n                {/* test */}\n                <Route exact path=\"/test\" component={Test}></Route>\n                {/* 404 */}\n                <Route component={NotFound}></Route>\n              </Switch>\n            </div>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}